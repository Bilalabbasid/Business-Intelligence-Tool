Write-Host "üöÄ Business Intelligence Tool Setup Verification" -ForegroundColor Blue
Write-Host "=============================================" -ForegroundColor Blue
Write-Host ""

# Function to test if a port is open
function Test-Port {
    param([string]$Host, [int]$Port)
    try {
        $tcpClient = New-Object System.Net.Sockets.TcpClient
        $tcpClient.ReceiveTimeout = 1000
        $tcpClient.SendTimeout = 1000
        $tcpClient.Connect($Host, $Port)
        $tcpClient.Close()
        return $true
    }
    catch {
        return $false
    }
}

# Check Python
Write-Host "üîç Checking Python..." -ForegroundColor Cyan
try {
    $pythonVersion = python --version 2>&1 | Out-String
    Write-Host "‚úÖ Python: $($pythonVersion.Trim())" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Python not found" -ForegroundColor Red
}

# Check Node.js
Write-Host "üîç Checking Node.js..." -ForegroundColor Cyan
try {
    $nodeVersion = node --version 2>&1 | Out-String
    $npmVersion = npm --version 2>&1 | Out-String
    Write-Host "‚úÖ Node.js: $($nodeVersion.Trim())" -ForegroundColor Green
    Write-Host "‚úÖ npm: $($npmVersion.Trim())" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Node.js not found" -ForegroundColor Red
}

# Check Go
Write-Host "üîç Checking Go..." -ForegroundColor Cyan
try {
    $goVersion = go version 2>&1 | Out-String
    Write-Host "‚úÖ Go: $($goVersion.Trim())" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Go not found" -ForegroundColor Red
}

# Check Docker
Write-Host "üîç Checking Docker..." -ForegroundColor Cyan
try {
    $dockerVersion = docker --version 2>&1 | Out-String
    Write-Host "‚úÖ Docker: $($dockerVersion.Trim())" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Docker not found or not running" -ForegroundColor Red
}

# Check Git
Write-Host "üîç Checking Git..." -ForegroundColor Cyan
try {
    git status | Out-Null 2>&1
    Write-Host "‚úÖ Git repository initialized" -ForegroundColor Green
}
catch {
    Write-Host "‚ùå Git not available or not a repository" -ForegroundColor Red
}

# Check Project Structure
Write-Host "üîç Checking Project Structure..." -ForegroundColor Cyan
$dirs = @("bi_tool", "bi-frontend", "backup-cli", "logscan", "docs", "scripts")
foreach ($dir in $dirs) {
    if (Test-Path $dir) {
        Write-Host "‚úÖ Directory: $dir" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Missing: $dir" -ForegroundColor Red
    }
}

$files = @("docker-compose.yml", "README.md")
foreach ($file in $files) {
    if (Test-Path $file) {
        Write-Host "‚úÖ File: $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Missing: $file" -ForegroundColor Red
    }
}

# Check Services
Write-Host "üîç Checking Services..." -ForegroundColor Cyan

if (Test-Port -Host "127.0.0.1" -Port 8000) {
    Write-Host "‚úÖ Backend API (port 8000)" -ForegroundColor Green
} else {
    Write-Host "‚ùå Backend API not running" -ForegroundColor Red
}

if (Test-Port -Host "127.0.0.1" -Port 3000) {
    Write-Host "‚úÖ Frontend (port 3000)" -ForegroundColor Green
} else {
    Write-Host "‚ùå Frontend not running" -ForegroundColor Red
}

if (Test-Port -Host "127.0.0.1" -Port 5432) {
    Write-Host "‚úÖ PostgreSQL (port 5432)" -ForegroundColor Green
} else {
    Write-Host "‚ùå PostgreSQL not running" -ForegroundColor Red
}

if (Test-Port -Host "127.0.0.1" -Port 27017) {
    Write-Host "‚úÖ MongoDB (port 27017)" -ForegroundColor Green
} else {
    Write-Host "‚ùå MongoDB not running" -ForegroundColor Red
}

if (Test-Port -Host "127.0.0.1" -Port 6379) {
    Write-Host "‚úÖ Redis (port 6379)" -ForegroundColor Green
} else {
    Write-Host "‚ùå Redis not running" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéØ Verification Complete!" -ForegroundColor Blue
Write-Host ""
Write-Host "üí° To start all services:" -ForegroundColor Yellow
Write-Host "   docker-compose up -d" -ForegroundColor White
Write-Host ""
Write-Host "üí° To build Go tools:" -ForegroundColor Yellow
Write-Host "   cd backup-cli; go build" -ForegroundColor White
Write-Host "   cd logscan; go build" -ForegroundColor White
Write-Host ""
Write-Host ""